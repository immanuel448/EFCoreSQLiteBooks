using System;
using System.Linq;

namespace EFCoreSQLiteBooks
{
    internal class GestorLibros
    {
        private readonly AppDbContext _db;

        // Constructor que recibe el contexto
        public GestorLibros(AppDbContext db)
        {
            _db = db;
        }

        public void AgregarLibro()
        {
            //agregar un libro desde consola
            Console.WriteLine("\n--- AGREGAR NUEVO LIBRO ---");

            Console.Write("Título: ");
            string titulo = Console.ReadLine();

            Console.Write("Autor: ");
            string autor = Console.ReadLine();

            Console.Write("Año de publicación: ");
            int anho;
            while (!int.TryParse(Console.ReadLine(), out anho))
            {
                Console.Write("Por favor, introduce un año válido: ");
            }

            Console.Write("Género: ");
            string genero = Console.ReadLine();

            var nuevoLibro = new Libro
            {
                Titulo = titulo,
                Autor = autor,
                AnhoPublicacion = anho,
                Genero = genero
            };

            _db.Libros.Add(nuevoLibro);
            _db.SaveChanges();

            Console.WriteLine("✅ Libro agregado correctamente.");
        }

        public void MostrarLibros()
        {
            // Obtener todos los libros almacenados en la base LEER ------------------------------------
            var libros = _db.Libros.ToList();

            // Mostrar en consola los libros encontrados
            Console.WriteLine("Libros en la base de datos:");
            foreach (var l in libros)
            {
                Console.WriteLine($"{l.Id}: {l.Titulo} - {l.Autor} ({l.AnhoPublicacion}) [{l.Genero}]");
            }
        }

        public void BuscarLibroPorId()
        {
            Console.WriteLine("Ingrese el ID del libro para buscarlo.");
            bool validarID = int.TryParse(Console.ReadLine(), out int numID) && numID > 0;
            if (validarID)
            {
                var seleccionID = 
            }
            else
            {
                Console.WriteLine("Debe ingresar un número entero válido");
            }
        }

        public void EditarLibro()
        {
            // Buscar el primer libro para actualizarlo, ACTUALIZAR ------------------------------------
            var libroActualizar = _db.Libros.FirstOrDefault();
            if (libroActualizar != null)
            {
                // Cambiar el género del libro
                libroActualizar.Genero = "Ciencia Ficción";

                // Guardar la actualización en la base (ejecutar UPDATE)
                _db.SaveChanges();
            }
        }

        public void EliminarLibro()
        {
            // Buscar el primer libro para eliminarlo
            var libroEliminar = _db.Libros.FirstOrDefault();
            if (libroEliminar != null)
            {
                // Remover el libro del contexto (marcar para eliminar)
                _db.Libros.Remove(libroEliminar);

                // Guardar los cambios en la base (ejecutar DELETE)
                _db.SaveChanges();
            }
        }
    }
}
